import numpy as np 

print()

#INPUT

N = int(input("Introduce tu N: "))

X = np.zeros(N+1)
Q = np.zeros((N+1, N+1))

#EJEMPLO LOGARTIMO
# X = [2, 2.2, 2.3]
# Q = [[0.6931, 0, 0],
# 	[0.7885, 0, 0],
# 	[0.8329, 0, 0]]
# x = 2.1

# #PROBLEMA 1A
# X = [8.1, 8.3, 8.6, 8.7]
# Q = [[16.94410, 0, 0, 0],
# 	[17.56492, 0, 0, 0],
# 	[18.50515, 0, 0, 0],
# 	[18.82091, 0, 0, 0]]
# x = 8.4

#PROBLEMA 1B
# x = -1/3
# Q = [[-0.0718125, 0, 0, 0],
# 	  [-0.02475, 0, 0, 0],
# 	  [0.3349375, 0, 0, 0],
# 	  [1.101, 0, 0, 0]]
# X = [-0.75, -0.5, -0.25, 0]

#PROBLEMA 1C
# x = 0.25
# Q = [[0.62049958, 0, 0, 0],
# 	  [-0.28398668, 0, 0, 0],
# 	  [0.00660095, 0, 0, 0],
# 	  [0.2484244, 0, 0, 0]]
# X = [0.1, 0.2, 0.3, 0.4]

#PROBLEMA 1D
# x = 0.9
# Q = [[-0.1769446, 0, 0, 0],
# 	  [0.01375227, 0, 0, 0],
# 	  [0.22363362, 0, 0, 0],
# 	  [0.65809197, 0, 0, 0]]
# X = [0.6, 0.7, 0.8, 1.0]

#PROBLEMA 2A
# x = 0.43
# Q = [[1, 0, 0, 0],
# 	  [1.64872, 0, 0, 0],
# 	  [2.71828, 0, 0, 0],
# 	  [4.48169, 0, 0, 0]]
# X = [0, 0.25, 0.5, 0.75]

#PROBLEMA 2B
# x = 0
# Q = [[1.93750, 0, 0, 0],
# 	  [1.33203, 0, 0, 0],
# 	  [0.800781, 0, 0, 0],
# 	  [0.687500, 0, 0, 0]]
# X = [-0.5, -0.25, 0.25, 0.5]

#PROBLEMA 2C
# x = 0.18
# Q = [[-0.29004986, 0, 0, 0],
# 	  [-0.56079734, 0, 0, 0],
# 	  [-0.81401972, 0, 0, 0],
# 	  [-1.0526302, 0, 0, 0]]
# X = [0.1, 0.2, 0.3, 0.4]

#PROBLEMA 2D
# x = 0.25
# Q = [[0.86199480, 0, 0, 0],
# 	  [0.95802009, 0, 0, 0],
# 	  [1.0986123, 0, 0, 0],
# 	  [-1.0526302, 0, 0, 0]]
# X = [1.2943767, -0.5, 0, 0.5]

print("Introduce las f(x), que son Q_0(x): ")
for i in range(N):
	X[i] = float(input(f"X{i}: "))
	Q[0][i] = float(input(f"Q_0[x{i}]: "))
x = float(input("Introduce el valor de x que quieres aproximar: "))

#STEP 1

for i in range(1,N+1):
	for j in range(1, i+1):
		Q[i][j] = ((x-X[i-j])*Q[i][j-1]-(x-X[i])*Q[i-1][j-1])/(X[i]-X[i-j])

#STEP 2

for i in range(N+1):
	for j in range(i+1):
		print("[{}][{}]: {:.6f}   ".format(i, j, Q[i][j]), end="")
	print() 